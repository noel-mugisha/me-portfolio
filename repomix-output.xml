This file is a merged representation of the entire codebase, combined into a single document by Repomix.

<file_summary>
This section contains a summary of this file.

<purpose>
This file contains a packed representation of the entire repository's contents.
It is designed to be easily consumable by AI systems for analysis, code review,
or other automated processes.
</purpose>

<file_format>
The content is organized as follows:
1. This summary section
2. Repository information
3. Directory structure
4. Repository files (if enabled)
5. Multiple file entries, each consisting of:
  - File path as an attribute
  - Full contents of the file
</file_format>

<usage_guidelines>
- This file should be treated as read-only. Any changes should be made to the
  original repository files, not this packed version.
- When processing this file, use the file path to distinguish
  between different files in the repository.
- Be aware that this file may contain sensitive information. Handle it with
  the same level of security as you would the original repository.
</usage_guidelines>

<notes>
- Some files may have been excluded based on .gitignore rules and Repomix's configuration
- Binary files are not included in this packed representation. Please refer to the Repository Structure section for a complete list of file paths, including binary files
- Files matching patterns in .gitignore are excluded
- Files matching default ignore patterns are excluded
- Files are sorted by Git change count (files with more changes are at the bottom)
</notes>

</file_summary>

<directory_structure>
.bolt/prompt
.gitignore
index.html
package.json
postcss.config.js
public/.well-known/apple-app-site-association
src/App.css
src/App.jsx
src/components/AllSkills.jsx
src/components/Brackets.jsx
src/components/FakeScroller.jsx
src/components/Footer.jsx
src/components/ImportsColorizer.jsx
src/components/Keyword.jsx
src/components/Literal.jsx
src/components/MacWindow.jsx
src/components/MajorSkills.jsx
src/components/Navbar.jsx
src/components/ProjectCard.jsx
src/components/PropertiesColorizer.jsx
src/components/StringColorizer.jsx
src/components/Symbol.jsx
src/data.jsx
src/data/navlinks.js
src/favicon.svg
src/index.css
src/main.jsx
src/reducers/active_personalInfo.js
src/reducers/active_sidenav.js
src/reducers/contactForm.js
src/reducers/contacts_panel.js
src/reducers/education_level.js
src/reducers/education_panel.js
src/reducers/index.js
src/reducers/languages_panel.js
src/reducers/navigation.js
src/reducers/personalinfo_panel.js
src/reducers/projectsTech.js
src/reducers/selected_skills.js
src/store.js
src/styles/footer.scss
src/styles/navbar.scss
src/styles/projectCard.scss
src/styles/welcome.scss
src/views/AboutMe/CodeSnippets.jsx
src/views/AboutMe/Editor.jsx
src/views/AboutMe/index.jsx
src/views/AboutMe/MainNav.jsx
src/views/AboutMe/SideNav.jsx
src/views/AboutMe/Skills_Certificates_Viewer.jsx
src/views/ContactMe/Editor.jsx
src/views/ContactMe/Form.jsx
src/views/ContactMe/FormCode.jsx
src/views/ContactMe/index.jsx
src/views/ContactMe/MainNav.jsx
src/views/Home.jsx
src/views/Projects/Editor.jsx
src/views/Projects/index.jsx
src/views/Projects/MainNav.jsx
src/views/Welcome.jsx
tailwind.config.js
vercel.json
vite.config.js
</directory_structure>

<files>
This section contains the contents of the repository's files.

<file path=".bolt/prompt">
This is my portfolio, it has my skills past projects certificates, it must be nice.
</file>

<file path=".gitignore">
# Logs
logs
*.log
npm-debug.log*
yarn-debug.log*
yarn-error.log*
pnpm-debug.log*
lerna-debug.log*

node_modules
dist
dist-ssr
*.local

# Editor directories and files
.vscode/*
!.vscode/extensions.json
.idea
.DS_Store
*.suo
*.ntvs*
*.njsproj
*.sln
*.sw?
</file>

<file path="index.html">
<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <link rel="icon" type="image/svg+xml" href="/src/favicon.svg" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Noel Mugisha</title>
  </head>
  <body>
    <div id="root"></div>
    <script type="module" src="/src/main.jsx"></script>
  </body>
</html>
</file>

<file path="package.json">
{
  "name": "my-portfolio",
  "private": true,
  "version": "0.0.0",
  "scripts": {
    "start": "vite",
    "dev": "vite",
    "build": "vite build",
    "preview": "vite preview"
  },
  "dependencies": {
    "@iconify/iconify": "^2.2.1",
    "@reduxjs/toolkit": "^1.8.1",
    "date-format": "^4.0.10",
    "framer-motion": "^6.3.3",
    "moment": "^2.29.3",
    "re-resizable": "^6.9.9",
    "react": "^18.1.0",
    "react-dom": "^18.0.0",
    "react-redux": "^8.0.1",
    "react-router-dom": "^6.3.0",
    "redux": "^4.2.0",
    "remixicon": "^2.5.0"
  },
  "devDependencies": {
    "@types/react": "^18.0.0",
    "@types/react-dom": "^18.0.0",
    "@vitejs/plugin-react": "^1.3.0",
    "autoprefixer": "^10.4.7",
    "postcss": "^8.4.13",
    "sass": "^1.51.0",
    "tailwindcss": "^3.0.24",
    "vite": "^2.9.5",
    "esbuild": "^0.14.47"
  }
}
</file>

<file path="postcss.config.js">
module.exports = {
  plugins: {
    tailwindcss: {},
    autoprefixer: {},
  },
}
</file>

<file path="public/.well-known/apple-app-site-association">
{
  "applinks": {
    "apps": [],
    "details": [
      {
        "appIDs": ["T3WQ33GWG5.com.catchcoin.web3"],
        "paths": [
          "/home",
          "/profile/*",
          "/details/*"
        ]
      }
    ]
  }
}
</file>

<file path="src/App.css">
.App {
  text-align: center;
}

.App-logo {
  height: 40vmin;
  pointer-events: none;
}

@media (prefers-reduced-motion: no-preference) {
  .App-logo {
    animation: App-logo-spin infinite 20s linear;
  }
}

.App-header {
  background-color: #282c34;
  min-height: 100vh;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  font-size: calc(10px + 2vmin);
  color: white;
}

.App-link {
  color: #61dafb;
}

@keyframes App-logo-spin {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}

button {
  font-size: calc(10px + 2vmin);
}
</file>

<file path="src/App.jsx">
import { useState,useEffect } from "react";
import "./App.css";
import { BrowserRouter, Routes, Route, useLocation, useNavigate } from "react-router-dom";
import Home from "./views/Home";

const CBTest = () => {
  const location = useLocation();
  const navigate = useNavigate();

  useEffect(() => {
    // Extract search params
    const queryParams = location.search; // includes the '?' prefix
    const targetUrl = `catchcoin://${queryParams}`;

    // Redirect to the custom scheme
    window.location.href = targetUrl;

    // Optional: navigate to a fallback page in case redirect fails
    setTimeout(() => {
      navigate("/"); // fallback route
    }, 2000);
  }, [location, navigate]);

  return (
    <div>
      <h2>Redirecting to CatchCoin App...</h2>
    </div>
  );
};

function App() {
  window.oncontextmenu = function () {
    return false;
  };

  document.addEventListener(
    "keydown",
    function (event) {
      var key = event.key || event.keyCode;

      if (key == 123) {
        return false;
      } else if (
        (event.ctrlKey && event.shiftKey && key == 73) ||
        (event.ctrlKey && event.shiftKey && key == 74)
      ) {
        return false;
      }
    },
    false
  );
  return (
    <BrowserRouter>
      <Routes>
        <Route path="/" element={<Home />} />
        <Route path="/wsegue" element={<CBTest />} />
      </Routes>
    </BrowserRouter>
  );
}



export default App;
</file>

<file path="src/components/AllSkills.jsx">
import React from "react";

export default function AllSkills() {
  return (
    <div className="w-full">
      <div className="mb-6">
        <p className="mb-2 text-xs font-bold">
          // frontend frameworks and libraries{" "}
        </p>
        <p className="flex flex-wrap gap-2">
          <img
            className=" h-[25px]"
            src="https://img.shields.io/badge/react-%2320232a.svg?style=for-the-badge&logo=react&logoColor=%2361DAFB"
          />
          <img
            className=" h-[25px]"
            src="https://img.shields.io/badge/redux-%23593d88.svg?style=for-the-badge&logo=redux&logoColor=white"
          />
          <img
            className=" h-[25px]"
            src="https://img.shields.io/badge/Next-black?style=for-the-badge&logo=next.js&logoColor=white"
          />
          <img
            className=" h-[25px]"
            src="https://img.shields.io/badge/threejs-black?style=for-the-badge&logo=three.js&logoColor=white"
          />
          <img
            className=" h-[25px]"
            src="https://img.shields.io/badge/angular-%23DD0031.svg?style=for-the-badge&logo=angular&logoColor=white"
          />
          <img
            className=" h-[25px]"
            src="https://img.shields.io/badge/CodeIgniter-%23EF4223.svg?style=for-the-badge&logo=codeIgniter&logoColor=white"
          />
          <img
            className=" h-[25px]"
            src="https://img.shields.io/badge/jquery-%230769AD.svg?style=for-the-badge&logo=jquery&logoColor=white"
          />
          <img
            className=" h-[25px]"
            src="https://img.shields.io/badge/MUI-%230081CB.svg?style=for-the-badge&logo=mui&logoColor=white"
          />
          <img
            className=" h-[25px]"
            src="https://img.shields.io/badge/SASS-hotpink.svg?style=for-the-badge&logo=SASS&logoColor=white"
          />
          <img
            className=" h-[25px]"
            src="https://img.shields.io/badge/tailwindcss-%2338B2AC.svg?style=for-the-badge&logo=tailwind-css&logoColor=white"
          />
        </p>
      </div>
      <div className="mb-6">
        <p className="mb-2 text-xs font-bold">
          // backend frameworks and libraies
        </p>
        <p className="flex flex-wrap gap-2">
          <img src="https://img.shields.io/badge/node.js-6DA55F?style=for-the-badge&logo=node.js&logoColor=white" />
          <img src="https://img.shields.io/badge/express.js-%23404d59.svg?style=for-the-badge&logo=express&logoColor=%2361DAFB" />
          <img src="https://img.shields.io/badge/django-%23092E20.svg?style=for-the-badge&logo=django&logoColor=white" />
          <img src="https://img.shields.io/badge/DJANGO-REST-ff1709?style=for-the-badge&logo=django&logoColor=white&color=ff1709&labelColor=gray" />
          <img src="https://img.shields.io/badge/flask-%23000.svg?style=for-the-badge&logo=flask&logoColor=white" />
          <img src="https://img.shields.io/badge/JWT-black?style=for-the-badge&logo=JSON%20web%20tokens" />
          <img src="https://img.shields.io/badge/nestjs-%23E0234E.svg?style=for-the-badge&logo=nestjs&logoColor=white" />
          <img src="https://img.shields.io/badge/spring-%236DB33F.svg?style=for-the-badge&logo=spring&logoColor=white" />
          <img src="https://img.shields.io/badge/Socket.io-black?style=for-the-badge&logo=socket.io&badgeColor=010101" />
          <img src="https://img.shields.io/badge/opencv-%23white.svg?style=for-the-badge&logo=opencv&logoColor=white" />
        </p>
      </div>
      <div className="mb-6">
        <p className="mb-2 text-xs font-bold">// mobile frameworks</p>
        <p className="flex flex-wrap gap-2">
          <img src="https://img.shields.io/badge/Flutter-%2302569B.svg?style=for-the-badge&logo=Flutter&logoColor=white" />
        </p>
      </div>
      <div className="mb-6">
        <p className="mb-2 text-xs font-bold">// ML</p>
        <p className="flex flex-wrap gap-2">
          <img src="https://img.shields.io/badge/numpy-%23013243.svg?style=for-the-badge&logo=numpy&logoColor=white" />
          <img src="https://img.shields.io/badge/pandas-%23150458.svg?style=for-the-badge&logo=pandas&logoColor=white" />
          <img src="https://img.shields.io/badge/cvzone-%23013243.svg?style=for-the-badge&logo=numpy&logoColor=white" />
        </p>
      </div>
      <div className="mb-6">
        <p className="mb-2 text-xs font-bold">// design</p>
        <p className="flex flex-wrap gap-2">
          <img src="https://img.shields.io/badge/figma-%23F24E1E.svg?style=for-the-badge&logo=figma&logoColor=white" />
          <img src="https://img.shields.io/badge/Adobe%20XD-470137?style=for-the-badge&logo=Adobe%20XD&logoColor=#FF61F6" />
          <img src="https://img.shields.io/badge/adobe%20illustrator-%23FF9A00.svg?style=for-the-badge&logo=adobe%20illustrator&logoColor=white" />
          <img src="https://img.shields.io/badge/blender-%23F5792A.svg?style=for-the-badge&logo=blender&logoColor=white" />{" "}
        </p>
      </div>
      <div className="mb-6">
        <p className="mb-2 text-xs font-bold">// operating systems</p>
        <p className="flex flex-wrap gap-2">
          <img src="https://img.shields.io/badge/Windows-0078D6?style=for-the-badge&logo=windows&logoColor=white" />
          <img src="https://img.shields.io/badge/Linux-FCC624?style=for-the-badge&logo=linux&logoColor=black" />
          <img src="https://img.shields.io/badge/Kali-268BEE?style=for-the-badge&logo=kalilinux&logoColor=white" />
          <img src="https://img.shields.io/badge/Ubuntu-E95420?style=for-the-badge&logo=ubuntu&logoColor=white" />
          <img src="https://img.shields.io/badge/-Zorin%20OS-%2310AAEB?style=for-the-badge&logo=zorin&logoColor=white" />
          <img src="https://img.shields.io/badge/-RaspberryPi-C51A4A?style=for-the-badge&logo=Raspberry-Pi" />
        </p>
      </div>
    </div>
  );
}
</file>

<file path="src/components/Brackets.jsx">
import React from "react";

export default function Brackets({ brackets, second = false }) {
  return <span className={second ? "accent-4" : "accent-3"}>{brackets}</span>;
}
</file>

<file path="src/components/FakeScroller.jsx">
import React from "react";

export default function FakeScroller() {
  return (
    <div className="h-full w-4 border-left pt-2 primary-bg-2">
      <div className="h-0.5 w-full accent-3-bg opacity-80"></div>
    </div>
  );
}
</file>

<file path="src/components/Footer.jsx">
import React from "react";
import { my_data } from "../data";
import "../styles/footer.scss";
import moment from "moment";

export default function Footer() {
  const [time, settime] = React.useState(new Date());
  React.useEffect(() => {
    setInterval(() => {
      settime(new Date());
    }, 1000);

    return () => {};
  }, []);

  return (
    <footer className="absolute bottom-0 left-0 w-full flex justify-between px-0 h-8 items-center text-xs secondary-1 primary-bg-2">
      <div className="h-full flex items-center">
        <span className="h-full px-4 items-center flex">find me on: </span>
        <a
          href={my_data.links.linkedin}
          target="_blank"
          className="h-full px-3 connect-link flex justify-center gap-1 items-center hover:text-white"
        >
          <i className="ri-linkedin-fill text-md"></i>
        </a>
        <a
          href={my_data.links.instagram}
          target="_blank"
          className="h-full px-3 connect-link flex justify-center gap-1 items-center hover:text-white"
        >
          <i className="ri-instagram-fill text-md"></i>
        </a>
        <a
          href={my_data.links.facebook}
          target="_blank"
          className="h-full px-3 connect-link flex justify-center gap-1 items-center hover:text-white"
        >
          <i className="ri-facebook-fill text-md"></i>
        </a>
      </div>
      <div>{moment(time).format("hh:mm:ss")}</div>
      <div className="flex h-full">
        <a
          href={my_data.links.github}
          target="_blank"
          className="px-7 hover:text-white flex justify-center gap-1 items-center h-full border-left"
        >
          @{my_data.github}
          <i className="ri-github-fill text-lg"></i>
        </a>
      </div>
    </footer>
  );
}
</file>

<file path="src/components/ImportsColorizer.jsx">
import React from "react";

export default function ImportsColorizer({ imported }) {
  return <span className="accent-1">{imported}</span>;
}
</file>

<file path="src/components/Keyword.jsx">
import React from "react";

export default function Keyword({ keyword }) {
  return <span className="secondary-3">{keyword}</span>;
}
</file>

<file path="src/components/Literal.jsx">
import React from "react";

export default function Literal({ literal }) {
  return <span className="accent-2">{literal}</span>;
}
</file>

<file path="src/components/MacWindow.jsx">
import React from "react";

export default function MacImgWindow({ img, img_name, styles }) {
  return (
    <div className={" flex flex-col justify-center " + styles}>
      <div className="w-100 h-9 px-4 primary-bg-2 flex justify-start items-center gap-1.5 rounded-tl-lg rounded-tr-lg bg-white">
        <div className=" rounded-full h-2 w-2 bg-red-600"></div>
        <div className=" rounded-full h-2 w-2 bg-yellow-600"></div>
        <div className=" rounded-full h-2 w-2 bg-green-600"></div>
        <p className="text-xs ml-7 secondary-1">
          {img_name.toLowerCase().split(" ").join("_")}.png
        </p>
      </div>
      <div className=" border-secondary rounded-bl-lg rounded-br-lg w-100 h-64 flex justify-center">
        <img src={img} alt={img_name} className="h-full" draggable={false} />
      </div>
    </div>
  );
}
</file>

<file path="src/components/MajorSkills.jsx">
import React from "react";
import { my_data } from "../data";
import Iconify from "@iconify/iconify";

export default function MajorSkills() {
  let smoothVal = 2;
  let generateRange = (upto) => {
    return (
      <span>
        {[...Array(Math.ceil(upto / smoothVal)).keys()].map(() => (
          <span>#</span>
        ))}
      </span>
    );
  };
  let generateRemainder = (upto) => {
    return (
      <span>
        {[...Array(50 - Math.ceil(upto / smoothVal)).keys()].map(() => (
          <span>&nbsp;</span>
        ))}
      </span>
    );
  };
  return (
    <div className="w-full flex justify-around">
      <div className="flex flex-col gap-5 w-5/12">
        {/* <h3 className=" font-bold mb-3 text-xs">// web_development</h3> */}
        {my_data.major_webdev_skills &&
          my_data.major_webdev_skills.map((skill, i) => (
            <div className="" key={i}>
              <p className="flex items-center gap-2">
                <i
                  className="iconify accent-6 text-lg"
                  data-icon={skill.icon}
                ></i>{" "}
                <span className="secondary-white text-xs">{skill.skill}</span>
              </p>
              <p className="pl-4">
                [
                <span className="text-[11px]">
                  {generateRange(skill.level)}
                  {generateRemainder(skill.level)}
                </span>
                ] <span className="accent-2">{skill.level}%</span>
              </p>
            </div>
          ))}
      </div>
      <div className="flex flex-col gap-5 w-5/12">
        {/* <h3 className=" font-bold mb-3 text-xs">// major_languages</h3> */}
        {my_data.major_prog_skills &&
          my_data.major_prog_skills.map((skill, i) => (
            <div className="" key={i}>
              <p className="flex items-center gap-2">
                <i
                  className="iconify accent-6 text-lg"
                  data-icon={skill.icon}
                ></i>{" "}
                <span className="secondary-white text-xs">{skill.skill}</span>
              </p>
              <p className="pl-4">
                [
                <span className="text-[11px]">
                  {generateRange(skill.level)}
                  {generateRemainder(skill.level)}
                </span>
                ] <span className="accent-2">{skill.level}%</span>
              </p>
            </div>
          ))}
      </div>
    </div>
  );
}
</file>

<file path="src/components/Navbar.jsx">
import React from "react";
import { useSelector, useDispatch } from "react-redux";
import { my_data } from "../data";
import { navlinks } from "../data/navlinks";
import "../styles/navbar.scss";
import navActions from "../reducers/navigation";

export default function () {
  const dispatch = useDispatch();
  const active = useSelector((store) => store.navigation);
  const navigateHandler = (navId) => dispatch(navActions.navigate(navId));
  return (
    <nav className=" flex justify-between h-11 items-center text-xs secondary-1 primary-bg-2">
      <div className="flex gap-9 h-full">
        <button onClick={(e) => navigateHandler(0)} className="px-7">
          _{my_data.firstName.toLowerCase().split(" ").join("-")}
        </button>
        <div className=" flex ml-20 h-full">
          {navlinks &&
            navlinks.map((navlink, i) => (
              <button
                key={i}
                onClick={(e) => navigateHandler(i)}
                className={
                  (i === active ? "navlink-active" : "") +
                  " h-full px-8 navlink hover:text-white"
                }
              >
                _{navlink}
              </button>
            ))}
        </div>
      </div>
      <div className="h-full">
        <button
          onClick={(e) => navigateHandler(4)}
          className={
            (active === 4 ? "navlink-active" : "") +
            " h-full contact-me-btn px-7 border-left hover:text-white"
          }
        >
          _contact-me
        </button>
      </div>
    </nav>
  );
}
</file>

<file path="src/components/ProjectCard.jsx">
import React from "react";
import { my_data } from "../data";
import "../styles/projectCard.scss";

export default function ProjectCard({ project, index }) {
  let tech = my_data.techs.find((tech) => project.tech.includes(tech.tech));
  return (
    <div key={index} className="w-[30%] mr-3">
      <p>
        <span className="text-xs accent-6">Project #</span>
        <span className="text-xs secondary-1">
          {" "}
          // _{project.name.toLowerCase()}
        </span>
      </p>
      <div className="mt-2 h-[12.5rem] rounded-lg relative overflow-hidden card-border">
        <i
          className={`${tech.icon} bg-[#86E1F9] input-color font-[600] px-1 rounded-[5px] absolute right-2.5 top-2.5`}
        ></i>
        <div className="h-[45%] w-full input-bg overflow-hidden">
          <img
            src="/assets/images/projectSample.jpg"
            alt=""
            className=" object-cover"
          />
        </div>
        <div className="h-[55%] w-full input-bg card-border-top p-4">
          <p className="secondary-1 text-xs">{project.smallDesc}</p>
          <a
            href={project.gitLink}
            target="_blank"
            className="btn-default flex w-28 gap-1 font-light px-[12px] py-[5px] rounded-lg text-[10px] my-3"
          >
            <i className="ri-github-line"></i> view-project
          </a>
        </div>
      </div>
    </div>
  );
}
</file>

<file path="src/components/PropertiesColorizer.jsx">
import React from "react";

export default function PropertiesColorizer({ property }) {
  return <span className="accent-6">{property}</span>;
}
</file>

<file path="src/components/StringColorizer.jsx">
import React from "react";

export default function StringColorizer({ string, onequote = false }) {
  return (
    <span className="accent-5" style={{ wordBreak: "break-all" }}>
      {(onequote ? "'" : '"') + string + (onequote ? "'" : '"')}
    </span>
  );
}
</file>

<file path="src/components/Symbol.jsx">
import React from "react";

export default function Symbol({ symbol }) {
  return <span className="secondary-1">{symbol}</span>;
}
</file>

<file path="src/data.jsx">
import belix from "./assets/noel.jpg";

export const my_data = {
  firstName: "Noel Mugisha",
  img: belix,
  surname: "Guy",
  proffession: "Fullstack > Backend developer",
  github: "noel-mugisha",
  links: {
    github: "https://github.com/noel-mugisha/",
    instagram: "https://www.instagram.com/n.0.e_.l/",
    // linkedin: "",
    twitter: "https://x.com/noelmugisha332",
  },
  contacts: {
    gmail: "noelmugisha332@gmail.com",
    phone: "+250793136798",
  },
  major_webdev_skills: [
    {
      skill: "Javascript + HTML + CSS",
      level: 100,
      icon: "vscode-icons:file-type-js",
    },
    { skill: "React", level: 97, icon: "vscode-icons:file-type-reactts" },
    {
      skill: "NodeJs + Express",
      level: 90,
      icon: "vscode-icons:file-type-node",
    },
    { skill: "Angular", level: 80, icon: "vscode-icons:file-type-angular" },
    { skill: "MongoDB", level: 80, icon: "vscode-icons:file-type-mongo" },
    { skill: "Php", level: 90, icon: "vscode-icons:file-type-php3" },
    { skill: "Sql", level: 90, icon: "vscode-icons:file-type-mysql" },
    { skill: "Django", level: 75, icon: "vscode-icons:file-type-django" },
  ],
  major_prog_skills: [
    { skill: "Python", level: 93, icon: "vscode-icons:file-type-python" },
    { skill: "Java", level: 85, icon: "vscode-icons:file-type-java" },
    { skill: "C++", level: 85, icon: "vscode-icons:file-type-cpp" },
    { skill: "C", level: 80, icon: "vscode-icons:file-type-c" },
    { skill: "Arduino", level: 85, icon: "vscode-icons:file-type-arduino" },
    { skill: "Raspberry Pi", level: 75, icon: "logos:raspberry-pi" },
  ],
  bio: (
    <span>
      Java & Spring addict. <br /> I have {new Date().getFullYear() - 2021 + 1}+ years of
      experience in software development.
      <br />
      Always Chasing perfection on every product I work on.
      <br />
      Solving real-life problems with clean elegant code.
    </span>
  ),
  interests: [
    "coding👨‍💻",
    "football⚽",
    "AI🤖",
    "music🎵",
  ],
  languages: ["English", "Kinyarwanda", "French"],
  education: [
    {
      level: "High School",
      school: "Rwanda Coding Academy",
      from: 2022,
      to: 2024,
      courses: [
        "Web User Interface",
        "Fundamentals of programming (C)",
        "C++",
        "Python",
        "Java",
        "JavaScript",
        "mySql + postgreSql",
        "NodeJs",
        "Software Analysis and Design",
        "Ethical hacking",
        "Embedded systems",
        "Advanced networking",
        "DevOps",
        "Php",
        "Mobile development",
        "English",
        "Maths",
        "Physics",
      ],
    },
    {
      level: "Ordinary level",
      school: "Byimana School of Sciences",
      from: 2019,
      to: 2021,
      courses: [
        "ICT",
        "Maths",
        "Physics",
        "Biology",
        "Entrepreneurship",
        "Chemistry",
        "Languages",
        "Literature in English",
      ],
    },
    {
      level: "Primary School",
      school:
        "Espoir De L'Avenir Primary School",
      from: 2009,
      to: 2014,
      courses: ["Elementary science", "Maths", "Languages", "Social studies"],
    },

  ],
  techs: [
    { icon: "ri-reactjs-line", tech: "React" },
    { icon: "ri-angularjs-fill", tech: "Angular" },
    { icon: "ri-flutter-fill", tech: "Flutter" },
  ],
  projects: [
    {
      name: "CodeAMA",
      desc: "CodeAma is the best way to connect beginner coders to well experienced programmers all over the globe.",
      smallDesc: "Code Community to connect junior coders to seniors",
      tech: ["Angular"],
      gitLink: "https://codeama-frontend-five.vercel.app/",
    },
    {
      name: "SparkCinema",
      desc: "SparkCinema is a reliable streaming platform for Rwandan Movies.",
      smallDesc: "A platform for streaming Rwandan Movies",
      tech: ["React"],
      gitLink: "https://spark-cinema.vercel.app/",
    },
    {
      name: "DailyMoney",
      desc: "An online business using Tron (Trx) as a payment medium. You get 3% (daily) of your investment.",
      smallDesc: "Online business earning 3% daily of tron invested",
      tech: ["React"],
      gitLink: "https://github.com/a-belard/dailymoney",
    },
    {
      name: "CovData",
      desc: "CovData let you know and track covid 19 numbers across the world.",
      smallDesc: "Know covid 19 numbers across the world",
      tech: ["React"],
      link: "https://covdata.netlify.app/",
      gitLink: "https://gitlab.com/belix/covid_data",
    },
    {
      name: "Inst-gram",
      smallDesc: "Instagram clone built on MERN stack",
      desc: "Instagram clone built on MERN stack - MongoDB, Express, React, NodJS.",
      tech: ["React"],
      link: "https://inst-gram.herokuapp.com/",
      gitLink: "https://github.com/a-belard/instagram",
    },
  ],
};
</file>

<file path="src/data/navlinks.js">
export const navlinks = ["hello", "about-me", "projects"];
</file>

<file path="src/favicon.svg">
<?xml version="1.0" encoding="utf-8"?>

<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Uploaded to: SVG Repo, www.svgrepo.com, Generator: SVG Repo Mixer Tools -->
<svg version="1.1" id="_x32_" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" 
	 width="800px" height="800px" viewBox="0 0 512 512"  xml:space="preserve">
<style type="text/css">
<![CDATA[
	.st0{fill:#000000;}
]]>
</style>
<g>
	<path class="st0" d="M453.039,429.75c-2-7.5-4.828-14.234-8.328-20.234c-6.125-10.516-14.25-18.703-23.203-25.203
		c-6.703-4.875-13.891-8.828-21.172-12.25c-10.938-5.125-22.125-9.063-32.438-12.875c-10.328-3.797-19.781-7.531-27.094-11.859
		c-2.688-1.578-5.109-3.234-7.203-4.953c-3.125-2.625-5.531-5.391-7.297-8.5s-2.953-6.594-3.406-10.969
		c-0.328-3.109-0.469-6.063-0.469-8.844c0-8.25,1.219-15.422,2.766-22.734c4.625-5.219,8.844-11.422,12.844-18.859
		s7.813-16.172,11.594-26.5c2.438-1.109,4.875-2.438,7.281-4.031c5.453-3.688,10.625-8.781,14.938-15.594
		s7.781-15.281,10.141-25.734c0.656-2.891,0.969-5.781,0.969-8.609c0-5.938-1.391-11.594-3.75-16.641
		c-1.625-3.484-3.703-6.703-6.125-9.625c1.234-4.547,2.734-10.688,4.063-17.859c1.844-9.969,3.375-21.922,3.375-34.531
		c0-8.109-0.625-16.484-2.281-24.781c-1.25-6.203-3.047-12.359-5.625-18.266c-3.844-8.859-9.438-17.203-17.234-24.094
		c-7.203-6.391-16.234-11.453-27.125-14.734c-4.609-5.516-9.375-10.188-14.297-14.109c-8.281-6.609-17-11.047-25.891-13.719
		S270.18,0,261.195,0c-4.734,0-9.453,0.266-14.203,0.688c-4.438,0.406-8.125,0.859-11.422,1.422c-4.938,0.828-9,1.922-12.938,3.281
		c-3.953,1.359-7.75,2.953-12.734,4.906c-1.891,0.75-4.359,1.844-7.359,3.359c-5.219,2.625-11.969,6.531-19.156,11.906
		C172.57,33.609,160.633,45,151.352,60.406c-4.656,7.688-8.625,16.406-11.422,26.141c-2.813,9.766-4.438,20.516-4.438,32.281
		c0,7.313,0.656,15.063,2,23.172c0,0.563,0.031,1.125,0.063,1.656c0.063,1,0.172,2.063,0.281,3.156
		c0.172,1.609,0.359,3.281,0.5,4.688c0.078,0.688,0.141,1.313,0.188,1.813c0,0.234,0.016,0.438,0.031,0.594v0.156v0.047v0.016v0.922
		l1.984,8.828c-2.844,3.109-5.313,6.609-7.234,10.438c-2.672,5.344-4.266,11.344-4.25,17.703c0,2.813,0.297,5.703,0.953,8.594
		c1.578,6.984,3.641,13.078,6.125,18.359c3.719,7.969,8.406,14.156,13.625,18.813c4.031,3.609,8.344,6.25,12.625,8.203
		c3.781,10.313,7.578,19.031,11.594,26.484c3.984,7.438,8.203,13.625,12.828,18.844c1.531,7.297,2.766,14.484,2.766,22.75
		c0,2.797-0.125,5.734-0.453,8.844c-0.313,3-0.984,5.594-1.938,7.938c-1.422,3.484-3.484,6.453-6.313,9.281
		c-2.813,2.781-6.422,5.375-10.672,7.797c-4.328,2.453-9.328,4.734-14.781,6.938c-9.547,3.859-20.406,7.516-31.438,11.891
		c-8.281,3.313-16.641,7.063-24.625,11.781c-5.984,3.516-11.75,7.594-17.047,12.453c-7.922,7.234-14.781,16.297-19.5,27.531
		c-4.75,11.203-7.391,24.469-7.375,40.156c0,2.203,0.469,4.328,1.234,6.266c0.719,1.813,1.688,3.516,2.844,5.078
		c2.172,2.969,5,5.609,8.438,8.172c6.047,4.469,14.078,8.641,24.484,12.578c15.594,5.875,36.5,11.141,63.516,15
		c27,3.828,60.125,6.234,100.063,6.234c34.594,0,64.109-1.813,88.938-4.797c18.641-2.219,34.641-5.125,48.234-8.438
		c10.188-2.5,19.016-5.234,26.594-8.109c5.688-2.141,10.688-4.375,15.016-6.688c3.234-1.75,6.125-3.5,8.656-5.344
		c3.813-2.75,6.859-5.594,9.188-8.813c1.141-1.609,2.125-3.328,2.828-5.172c0.688-1.859,1.109-3.891,1.109-5.969
		C456.57,447.938,455.336,438.344,453.039,429.75z M238.539,437.297l-59.031-75.469c3.078-1.797,6-3.75,8.734-5.938
		c2.938-2.359,5.641-4.969,8.016-7.938l42.922,19.922l-9.156,15.281l14.188,15.047L238.539,437.297z M202.336,337.875
		c1.734-4.047,2.922-8.469,3.391-13.25c0.391-3.688,0.563-7.219,0.563-10.563c0-10.938-1.813-20.156-3.609-28.5l-0.516-2.266
		l-1.594-1.688c-4.047-4.281-7.953-9.766-11.875-17.047c-3.906-7.297-7.813-16.375-11.828-27.688l-1.313-3.703l-3.688-1.359
		c-2.563-0.938-5.047-2.141-7.438-3.75c-3.594-2.438-7.016-5.734-10.156-10.656c-3.125-4.922-5.938-11.531-7.969-20.469
		c-0.375-1.703-0.547-3.344-0.547-4.922c0-3.578,0.875-6.969,2.5-10.234c1.344-2.688,3.219-5.25,5.5-7.531
		c3.844,5.813,7,10.406,8.172,11.547c3.75,3.766,2.578,2.609,3.828,0.75c0,0,4.266-6,26.828-49.891
		c45.141,10.031,124.016-57.766,124.016-57.766s0.953,21.891,16,41.953c14.266,19.031,22.406,63.703,22.406,63.703
		s1.938-3.672,4.828-8.609c1.734,2.016,3.172,4.203,4.219,6.469c1.438,3.078,2.188,6.266,2.188,9.594
		c0,1.594-0.172,3.234-0.547,4.922c-1.359,5.953-3.047,10.891-4.969,14.953c-2.859,6.125-6.156,10.328-9.609,13.422
		c-3.469,3.094-7.141,5.109-10.969,6.516l-3.688,1.344l-1.313,3.703c-4.016,11.328-7.922,20.422-11.828,27.703
		c-3.922,7.313-7.844,12.781-11.891,17.063l-1.594,1.688l-0.5,2.281c-1.813,8.313-3.625,17.547-3.625,28.469
		c0,3.344,0.172,6.875,0.547,10.563c0.453,4.344,1.438,8.406,2.938,12.156c0.063,0.172,0.141,0.344,0.219,0.5L258.617,364
		L202.336,337.875z M277.555,440.031l-6.078-41.828l14.203-15.047l-9.188-15.344l38.828-20.406c1.078,1.391,2.203,2.719,3.422,3.953
		c3.859,3.953,8.297,7.219,13.063,10.063L277.555,440.031z"/>
</g>
</svg>
</file>

<file path="src/index.css">
@import url('https://fonts.googleapis.com/css2?family=Fira+Code:wght@300;400;500;600;700&display=swap');

@tailwind base;
@tailwind components;
@tailwind utilities;

:root {
  --primary-font: Fira Code, sans-serif;
  --primary-1: #01080E;
  --primary-2: #011e36;
  --secondary-1: #607B96;
  --secondary-2: #3C9D93;
  --secondary-3: #4D5BCE;
  --secondary-4: #FFFFFF;
  --accent-1: #FEA55F;
  --accent-2: #43D9AD;
  --accent-3: #E99287;
  --accent-4: #C98BDF;
  --accent-5: #e6db74;
  --accent-6: dodgerblue;
  --lines-color: #293a4d;
  --secondary-white: #E5E9F0;
  --input-bg: #011221;
  --input-border: #1E2D3D;
}
.input-border {
  border: 1px solid var(--input-border);
  padding-left: 15px
}

.input-border:focus {
  transition: .5s;
  border: 1px solid var(--secondary-1);
  outline: none;
}

.input-border:hover {
  transition: .5s;
  border: 1px solid var(--secondary-1);
}

.input-bg {
  background-color: var(--input-bg);
}

.input-color {
  color: var(--input-bg);
}

.accent-3-bg {
  background-color: var(--accent-3);
}

.accent-1 {
  color: var(--accent-1)
}

.accent-2 {
  color: var(--accent-2)
}

.accent-3 {
  color: var(--accent-3)
}

.accent-4 {
  color: var(--accent-4)
}

.accent-5 {
  color: var(--accent-5)
}

.accent-6 {
  color : var(--accent-6)
}

.secondary-1 {
  color: var(--secondary-1)
}

.secondary-2 {
  color: var(--secondary-2);
}

.secondary-3 {
  color: var(--secondary-3);
}

.secondary-4 {
  color: var(--secondary-4);
}

.secondary-white {
  color: var(--secondary-white);
}

.primary-bg-2 {
  background-color: var(--primary-2);
}

* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

.btn-primary {
  color: var(--primary-1);
  background-color: var(--accent-1);
}

.btn-primary:hover {
  transition: background-color 0.5s;
  background-color: #FFAC6B;
}

.btn-default {
  color: var(--secondary-4);
  background-color: #1C2B3A;
}

.btn-default:hover {
  transition: background-color 0.5s;
  background-color: #263B50;
}

.btn-ghost {
  color: var(--secondary-1)
}

.btn-ghost:hover {
  border: rgba(255, 255, 255, 0.5);
}

.border-left {
  border-left: 1px solid var(--lines-color);
}

.border-right {
  border-right: 1px solid var(--lines-color);
}

.border-bottom {
  border-bottom: 1px solid var(--lines-color);
}

.border-top {
  border-top: 1px solid var(--lines-color);
}

body {
  background-color: var(--primary-2);
  font-family: 'Fira Code',-apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',
    'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',
    sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

code {
  font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New',
    monospace;
}

button:focus {
  outline: none;
}
</file>

<file path="src/main.jsx">
import React from "react";
import ReactDOM from "react-dom/client";
import App from "./App";
import "./index.css";
import { store } from "./store";
import { Provider } from "react-redux";

ReactDOM.createRoot(document.getElementById("root")).render(
  <React.StrictMode>
    <Provider store={store}>
      <App />
    </Provider>
  </React.StrictMode>
);
</file>

<file path="src/reducers/active_personalInfo.js">
import { createSlice } from "@reduxjs/toolkit";

const initialState = 0;
const active_persInfo = createSlice({
  name: "active_persInfo",
  initialState,
  reducers: {
    setActive: (state, { payload }) => {
      return payload;
    },
  },
});

export const active_personalInfo = active_persInfo.reducer;
export default active_persInfo.actions;
</file>

<file path="src/reducers/active_sidenav.js">
import { createSlice } from "@reduxjs/toolkit";

const initialState = 1;
const active_sidenav = createSlice({
  name: "active_sidenav",
  initialState,
  reducers: {
    setActive: (state, { payload }) => {
      return payload;
    },
  },
});

export const active_sidenav_reducer = active_sidenav.reducer;
export default active_sidenav.actions;
</file>

<file path="src/reducers/contactForm.js">
import { createSlice } from "@reduxjs/toolkit";

const initialState = {
  name: "",
  email: "",
  message: "",
};
const contactFormSlice = createSlice({
  name: "contact_form",
  initialState,
  reducers: {
    update: (state, { payload }) => {
      return payload;
    },
  },
});

export const contactFormReducer = contactFormSlice.reducer;
export default contactFormSlice.actions;
</file>

<file path="src/reducers/contacts_panel.js">
import { createSlice } from "@reduxjs/toolkit";

const initialState = false;
const contacts_panel_slice = createSlice({
  name: "contacts_panel_open",
  initialState,
  reducers: {
    open: (state, { payload }) => {
      return payload;
    },
  },
});

export const contacts_panel_reducer = contacts_panel_slice.reducer;
export default contacts_panel_slice.actions;
</file>

<file path="src/reducers/education_level.js">
import { createSlice } from "@reduxjs/toolkit";

const initialState = 0;
const education_level_slice = createSlice({
  name: "education_level",
  initialState,
  reducers: {
    setActive: (state, { payload }) => {
      return payload;
    },
  },
});

export const education_level = education_level_slice.reducer;
export default education_level_slice.actions;
</file>

<file path="src/reducers/education_panel.js">
import { createSlice } from "@reduxjs/toolkit";

const initialState = true;
const education_panel_slice = createSlice({
  name: "education_panel_open",
  initialState,
  reducers: {
    open: (state, { payload }) => {
      return payload;
    },
  },
});

export const education_panel_reducer = education_panel_slice.reducer;
export default education_panel_slice.actions;
</file>

<file path="src/reducers/index.js">
import { active_personalInfo } from "./active_personalInfo";
import { active_sidenav_reducer } from "./active_sidenav";
import { contactFormReducer } from "./contactForm";
import { contacts_panel_reducer } from "./contacts_panel";
import { education_level } from "./education_level";
import { education_panel_reducer } from "./education_panel";
import { languages_panel_reducer } from "./languages_panel";
import { navReducer } from "./navigation";
import { personalinfo_panel_reducer } from "./personalinfo_panel";
import { projectsTechReducer } from "./projectsTech";
import { selected_skills_reducer } from "./selected_skills";

export default {
  navigation: navReducer,
  contacts_panel: contacts_panel_reducer,
  personalinfo_panel: personalinfo_panel_reducer,
  education_panel: education_panel_reducer,
  active_persInfo: active_personalInfo,
  education_level: education_level,
  languages_panel: languages_panel_reducer,
  contactForm: contactFormReducer,
  projectsTech: projectsTechReducer,
  active_sidenav: active_sidenav_reducer,
  selected_skills: selected_skills_reducer,
};
</file>

<file path="src/reducers/languages_panel.js">
import { createSlice } from "@reduxjs/toolkit";

const initialState = false;
const languages_panel_slice = createSlice({
  name: "languages_panel_open",
  initialState,
  reducers: {
    open: (state, { payload }) => {
      return payload;
    },
  },
});

export const languages_panel_reducer = languages_panel_slice.reducer;
export default languages_panel_slice.actions;
</file>

<file path="src/reducers/navigation.js">
import { createSlice } from "@reduxjs/toolkit";

const initialState = 0;
const navSlice = createSlice({
  name: "navigation",
  initialState,
  reducers: {
    navigate: (state, { payload }) => {
      return payload;
    },
  },
});

export const navReducer = navSlice.reducer;
export default navSlice.actions;
</file>

<file path="src/reducers/personalinfo_panel.js">
import { createSlice } from "@reduxjs/toolkit";

const initialState = true;
const personalinfo_panel_slice = createSlice({
  name: "personalinfo_panel_open",
  initialState,
  reducers: {
    open: (state, { payload }) => {
      return payload;
    },
  },
});

export const personalinfo_panel_reducer = personalinfo_panel_slice.reducer;
export default personalinfo_panel_slice.actions;
</file>

<file path="src/reducers/projectsTech.js">
import { createSlice } from "@reduxjs/toolkit";
import { my_data } from "../data";

const initialState = my_data.techs.map((tech) => tech.tech);
const projectsTechSlice = createSlice({
  name: "projectTech",
  initialState,
  reducers: {
    update: (state, { payload }) => {
      let techFilter = [...state];
      if (techFilter.includes(payload)) {
        techFilter = techFilter.filter((tech) => tech !== payload);
      } else {
        techFilter = [...techFilter, payload];
      }
      return techFilter;
    },
  },
});

export const projectsTechReducer = projectsTechSlice.reducer;
export default projectsTechSlice.actions;
</file>

<file path="src/reducers/selected_skills.js">
import { createSlice } from "@reduxjs/toolkit";

const initialState = 0;
const selected_skills = createSlice({
  name: "selected_skills",
  initialState,
  reducers: {
    select: (state, { payload }) => {
      return payload;
    },
  },
});

export const selected_skills_reducer = selected_skills.reducer;
export default selected_skills.actions;
</file>

<file path="src/store.js">
import { configureStore } from "@reduxjs/toolkit";
import reducers from "./reducers";
export const store = configureStore({
  reducer: { ...reducers },
});
</file>

<file path="src/styles/footer.scss">
footer {
    border-top: 1px solid var(--lines-color);

    .connect-link {
        border: var(--lines-color) solid;
        border-width: 0 0px 0 1px;
      }
      
    .connect-link:last-of-type {
        border-right: var(--lines-color) solid 1px;
    }
}
</file>

<file path="src/styles/navbar.scss">
nav {
    border-bottom: 1px solid var(--lines-color);
}

.navlink {
    border: var(--lines-color) solid;
    border-width: 0 0px 0 1px;
  }
  
  .navlink:last-of-type {
    border-right: var(--lines-color) solid 1px;
  }
  
  .navlink-active {
    color: var(--secondary-4);
    border-bottom: 2px solid var(--accent-1) !important;
  }
</file>

<file path="src/styles/projectCard.scss">
.card-border {
    border: 1px solid rgba(255, 255, 255, 0.07);
}

.card-border-top {
    border: solid rgba(255, 255, 255, 0.308);
    border-width: 1px 0 0;
}
</file>

<file path="src/styles/welcome.scss">
.border-secondary {
    border: 1px solid var(--lines-color);
    border-top: 0;
}

.blurs {
    filter: blur(0px);
    animation: blur-rotate 2s linear infinite alternate;
    transform: scaleY(150);
}

@keyframes blur-rotate {
    from {
        filter: blur(0);
       }
    to {
        filter: blur(40px);
    }
}
</file>

<file path="src/views/AboutMe/CodeSnippets.jsx">
import React from "react";

export default function CodeSnippets() {
  return <section className="h-full flex-1"></section>;
}
</file>

<file path="src/views/AboutMe/Editor.jsx">
import { Resizable } from "re-resizable";
import React, { useEffect, useRef, useState } from "react";
import { useSelector } from "react-redux";
import Brackets from "../../components/Brackets";
import FakeScroller from "../../components/FakeScroller";
import Keyword from "../../components/Keyword";
import Literal from "../../components/Literal";
import PropertiesColorizer from "../../components/PropertiesColorizer";
import StringColorizer from "../../components/StringColorizer";
import Symbol from "../../components/Symbol";
import { my_data } from "../../data";
import ImportsColorizer from "../../components/ImportsColorizer";

export default function Editor() {
  const active_persInfo_state = useSelector((state) => state.active_persInfo);
  const education_level_state = useSelector((state) => state.education_level);
  var active_panel;
  var content;
  const bioRef = useRef();
  switch (active_persInfo_state) {
    case 0:
      active_panel = "bio";
      content = (
        <p className=" h-fit" ref={bioRef}>
          <br />
          About me <br />
          <br />
          {my_data.bio}
          <br />
          <span className=" invisible">--</span>
        </p>
      );
      break;
    case 1:
      active_panel = "interests";
      content = (
        <p className="h-fit " ref={bioRef}>
          <p>
            <Keyword keyword={"const"} />
            <Literal literal={" interests"} />
            <Symbol symbol={": "} />
            <Keyword keyword={"string"} />
            <Brackets brackets={"[]"} />
            <Symbol symbol={" = "} />
            <Brackets brackets={"["} second={true} />
          </p>
          {my_data.interests.map((interest, i) => (
            <p className="ml-7" key={i}>
              <StringColorizer string={interest} />
              <Symbol symbol={","} />
              <br />
            </p>
          ))}
          <Brackets brackets={"]"} second={true} />
          <Symbol symbol={";"} />
        </p>
      );
      break;
    case 2:
      active_panel = my_data.education[education_level_state].level
        .toLowerCase()
        .split(" ")
        .join("-");
      content = (
        <p className="h-fit whitespace-nowrap" ref={bioRef}>
          <p className="">
            <Keyword keyword={"import "} />
            <Brackets brackets={"{ "} second={true} />
            <ImportsColorizer imported={"EducationSchema "} />
            <Brackets brackets={"} "} second={true} />
            <Keyword keyword={"from "} />
            <StringColorizer string={"./EducationSchema"} onequote />
            <Symbol symbol={";"} />
          </p>
          <br />
          <p>
            <Keyword keyword={"const "} />
            <Literal
              literal={
                "my_" +
                my_data.education[education_level_state].level
                  .toLowerCase()
                  .split(" ")
                  .join("_")
              }
            />
            <Symbol symbol={":"} />
            <ImportsColorizer imported={" EducationSchema "} />
            <Symbol symbol={" = "} />
            <Brackets brackets={"{"} />
          </p>
          <div className="ml-7">
            <p>
              <PropertiesColorizer property={"level"} />
              <Symbol symbol={": "} />
              <StringColorizer
                string={my_data.education[education_level_state].level}
              />
              <Symbol symbol={","} />
            </p>
            <p>
              <PropertiesColorizer property={"school"} />
              <Symbol symbol={": "} />
              <StringColorizer
                string={my_data.education[education_level_state].school}
              />
              <Symbol symbol={","} />
            </p>
            <p>
              <PropertiesColorizer property={"duration"} />
              <Symbol symbol={": "} />
              <StringColorizer
                string={
                  my_data.education[education_level_state].to -
                  my_data.education[education_level_state].from +
                  1 +
                  " years"
                }
              />
              <Symbol symbol={","} />
            </p>
            <p>
              <PropertiesColorizer property={"fromTo"} />
              <Symbol symbol={": "} />
              <StringColorizer
                string={
                  my_data.education[education_level_state].from +
                  " - " +
                  my_data.education[education_level_state].to
                }
              />
              <Symbol symbol={","} />
            </p>
            <p>
              <PropertiesColorizer property={"courses"} />
              <Symbol symbol={": "} />
              <Brackets brackets={"["} second={true} />
            </p>
            {my_data.education[education_level_state].courses.map((course) => (
              <p className="pl-6">
                <StringColorizer string={course} />
                <Symbol symbol={","} />
              </p>
            ))}
            <p>
              <Brackets brackets={"]"} second={true} />
              <Symbol symbol={","} />
            </p>
          </div>
          <p>
            <Brackets brackets={"}"} />
            <Symbol symbol={";"} />
          </p>
        </p>
      );
      break;
    default:
      active_panel = "";
  }
  const [newContent, setnewContent] = useState();
  const [comments, setcomments] = useState();
  useEffect(() => {
    let p_bio = bioRef.current;
    let p_bio_height = p_bio.offsetHeight; // 12 for padding top
    let p_bio_lineHeight = Number(
      getComputedStyle(p_bio).lineHeight.substring(0, 2)
    );
    let lines = Math.ceil(p_bio_height / p_bio_lineHeight);
    setnewContent(
      <p className="w-4 h-full mr-7">
        {[...Array(lines).keys()].map((number, i) => (
          <span key={i}>{number + 1} </span>
        ))}
      </p>
    );
    if (active_panel === "bio") {
      setcomments(
        <p className="h-full mr-1.5">
          <span>/**</span>
          <br />
          {[...Array(lines - 2).keys()].map((number, i) => (
            <>
              <span key={i}>&nbsp;*&nbsp;</span>
              <br />
            </>
          ))}
          <span>&nbsp;*/</span>
        </p>
      );
    }
    return () => {};
  }, [active_panel, bioRef.current]);
  return (
    <Resizable
      className="h-full border-right text-sm secondary-1 flex-col gap-0 overflow-hidden"
      defaultSize={{ width: "55%" }}
      minWidth={"45%"}
      maxWidth={"60%"}
      enable={{
        top: false,
        topLeft: false,
        left: false,
        right: true,
        bottom: false,
        bottomLeft: false,
        bottomRight: false,
        topRight: false,
      }}
    >
      <div className="w-full border-bottom h-[43.7px] flex">
        <button className="flex h-full justify-center px-3 items-center border-right hover:bg-transparent text-sm">
          <span>{active_panel}.tsx</span>
          <i className="ri-close-fill ml-14"></i>
        </button>
      </div>
      <div className="w-full h-full flex flex-1 justify-between">
        <div className="px-8 pr-0 pt-3 w-11/12 flex">
          {newContent}
          {active_panel === "bio" && comments}
          {content}
        </div>
        <FakeScroller />
      </div>
    </Resizable>
  );
}
</file>

<file path="src/views/AboutMe/index.jsx">
import React from "react";
import { useSelector } from "react-redux";
import CodeSnippets from "./CodeSnippets";
import Editor from "./Editor";
import MainNav from "./MainNav";
import SideNav from "./SideNav";
import Skills_Certificates_Viewer from "./Skills_Certificates_Viewer";

export default function () {
  let active_sidenav = useSelector((state) => state.active_sidenav);

  return (
    <main className="flex w-full" style={{ height: "90%" }}>
      <SideNav />
      <MainNav />
      {active_sidenav === 1 ? (
        <>
          {" "}
          <Editor />
          <CodeSnippets />
        </>
      ) : (
        <Skills_Certificates_Viewer />
      )}
    </main>
  );
}
</file>

<file path="src/views/AboutMe/MainNav.jsx">
import { Resizable } from "re-resizable";
import React from "react";
import { useDispatch, useSelector } from "react-redux";
import { my_data } from "../../data";
import contacts_panel_actions from "../../reducers/contacts_panel";
import personalinfo_panel_actions from "../../reducers/personalinfo_panel";
import education_panel_actions from "../../reducers/education_panel";
import active_persInfo_actions from "../../reducers/active_personalInfo";
import education_level_actions from "../../reducers/education_level";
import languages_panel_actions from "../../reducers/languages_panel";
import selected_skills_actions from "../../reducers/selected_skills";

export default function MainNav() {
  const contacts_panel_state = useSelector((state) => state.contacts_panel);
  const active_sidenav = useSelector((state) => state.active_sidenav);
  let selected_skills = useSelector((state) => state.selected_skills);
  const personalinfo_panel_state = useSelector(
    (state) => state.personalinfo_panel
  );
  const education_panel_state = useSelector((state) => state.education_panel);
  const languages_panel_state = useSelector((state) => state.languages_panel);
  const active_persInfo_state = useSelector((state) => state.active_persInfo);
  const education_level_state = useSelector((state) => state.education_level);

  const dispatch = useDispatch();
  let contacts_panel_switch = (state) =>
    dispatch(contacts_panel_actions.open(!contacts_panel_state));
  let personalInfo_panel_switch = (state) =>
    dispatch(personalinfo_panel_actions.open(!personalinfo_panel_state));
  let education_panel_switch = (state) =>
    dispatch(education_panel_actions.open(!education_panel_state));
  let languages_panel_switch = (state) =>
    dispatch(languages_panel_actions.open(!languages_panel_state));
  let active_persInfo_handler = (newstate) =>
    dispatch(active_persInfo_actions.setActive(newstate));
  let active_educationLevel_handler = (newstate) =>
    dispatch(education_level_actions.setActive(newstate));

  return (
    <Resizable
      className="h-full border-right text-xs"
      defaultSize={{ width: "207px" }}
      minWidth={"190px"}
      maxWidth={"220px"}
      enable={{
        top: false,
        topLeft: false,
        left: false,
        right: true,
        bottom: false,
        bottomLeft: false,
        bottomRight: false,
        topRight: false,
      }}
    >
      {active_sidenav === 0 && (
        <div>
          <div>
            <button
              className="w-full border-bottom text-left flex pl-3 h-11 items-center text-md text-white opacity-90 hover:opacity-100"
              onClick={(e) => dispatch(selected_skills_actions.select(0))}
            >
              <i
                className={`ri-vip-diamond-${
                  selected_skills === 0 ? "fill" : "line"
                } text-sm mr-2`}
              ></i>
              <span> major_skills</span>
            </button>
            <button
              className="w-full border-bottom text-left flex pl-3 h-11 items-center text-md text-white opacity-90 hover:opacity-100"
              onClick={(e) => dispatch(selected_skills_actions.select(1))}
            >
              <i
                className={`ri-vip-diamond-${
                  selected_skills === 1 ? "fill" : "line"
                } text-sm mr-2`}
              ></i>
              <span> all_skills</span>
            </button>
          </div>
        </div>
      )}
      {active_sidenav === 1 && (
        <div>
          <div>
            <button
              className="w-full border-bottom text-left flex pl-3 h-11 items-center text-md text-white"
              onClick={(e) =>
                personalInfo_panel_switch(!personalinfo_panel_state)
              }
            >
              <i
                className={
                  (personalinfo_panel_state
                    ? "ri-arrow-down-s-fill"
                    : "ri-arrow-right-s-fill") + " text-base mr-2"
                }
              ></i>
              <span> personal-info</span>
            </button>
            <div
              className={
                (personalinfo_panel_state ? "block h-auto" : "hidden h-0") +
                " flex flex-col pl-4 secondary-1 py-3 text-sm"
              }
            >
              <button
                className={
                  "flex items-center gap-1 hover:text-white hover:opacity-80 " +
                  (active_persInfo_state === 0 ? "secondary-4" : "")
                }
                onClick={(e) => active_persInfo_handler(0)}
              >
                <i className="ri-arrow-drop-right-line text-3xl"></i>
                <i className="ri-folder-3-fill text-md -ml-1 mr-1 accent-3"></i>
                <span>bio</span>
              </button>
              <button
                className={
                  "flex items-center gap-1 hover:text-white hover:opacity-80 -mt-2 " +
                  (active_persInfo_state === 1 ? "secondary-4" : "")
                }
                onClick={(e) => active_persInfo_handler(1)}
              >
                <i className="ri-arrow-drop-right-line text-3xl"></i>
                <i className="ri-folder-3-fill text-md -ml-1 mr-1 accent-2"></i>
                <span>interests</span>
              </button>
              <button
                className={
                  "flex items-center gap-1 -mt-2 hover:text-white hover:opacity-80 " +
                  (active_persInfo_state === 2 ? "secondary-4" : "")
                }
                onClick={(e) => education_panel_switch(education_panel_state)}
              >
                <i
                  className={
                    (education_panel_state
                      ? "ri-arrow-drop-down-line"
                      : "ri-arrow-drop-right-line") + " text-3xl"
                  }
                ></i>
                <i className="ri-folder-3-fill text-md -ml-1 mr-1 secondary-3"></i>
                <span>education</span>
              </button>
              <div
                className={
                  (education_panel_state ? "h-auto block" : "hidden h-0") +
                  " pl-7 secondary-1"
                }
              >
                {my_data.education &&
                  my_data.education.map((education, i) => (
                    <button
                      key={i}
                      className={
                        "hover:text-white hover:opacity-80 " +
                        (education_level_state === i &&
                        active_persInfo_state === 2
                          ? "secondary-4"
                          : "")
                      }
                      onClick={(e) => {
                        active_persInfo_handler(2);
                        active_educationLevel_handler(i);
                      }}
                    >
                      <i className="ri-ball-pen-line"></i>
                      <span>
                        {" "}
                        {education.level.toLowerCase().split(" ").join("-")}
                      </span>
                    </button>
                  ))}
              </div>
            </div>
          </div>
          <div>
            {" "}
            <button
              className={
                "w-full border-bottom text-left flex pl-3 h-11 items-center text-white " +
                (personalinfo_panel_state ? "border-top" : "")
              }
              onClick={(e) => languages_panel_switch(languages_panel_state)}
            >
              <i
                className={
                  (languages_panel_state
                    ? "ri-arrow-down-s-fill"
                    : "ri-arrow-right-s-fill") + " text-base mr-2"
                }
              ></i>

              <span> languages</span>
            </button>
            <div
              className={
                (languages_panel_state ? "block h-auto" : "hidden h-0") +
                " flex flex-col pl-5 secondary-1 text-md py-3 gap-2"
              }
            >
              {my_data.languages &&
                my_data.languages.map((lang, i) => (
                  <p key={i} className="flex items-center gap-2">
                    <i className="ri-global-fill text-md"></i>
                    <span> {lang}</span>
                  </p>
                ))}
            </div>
          </div>
          <div>
            {" "}
            <button
              className={
                "w-full border-bottom text-left flex pl-3 h-11 items-center text-white " +
                (languages_panel_state ? "border-top" : "")
              }
              onClick={(e) => contacts_panel_switch(contacts_panel_state)}
            >
              <i
                className={
                  (contacts_panel_state
                    ? "ri-arrow-down-s-fill"
                    : "ri-arrow-right-s-fill") + " text-base mr-2"
                }
              ></i>

              <span> contacts</span>
            </button>
            <div
              className={
                (contacts_panel_state ? "block h-auto" : "hidden h-0") +
                " flex flex-col pl-5 secondary-1 text-md py-3 gap-2"
              }
            >
              <p className="flex items-center gap-2">
                <i className="ri-mail-fill text-md"></i> noelmugisha332@gmail.com
              </p>
              <p className="flex items-center gap-2">
                <i className="ri-phone-fill text-md"></i> +250793136798
              </p>
            </div>
          </div>
        </div>
      )}
    </Resizable>
  );
}
</file>

<file path="src/views/AboutMe/SideNav.jsx">
import { Resizable } from "re-resizable";
import React from "react";
import { useDispatch, useSelector } from "react-redux";
import active_sidenav_actions from "../../reducers/active_sidenav";

export default function SideNav() {
  let dispatch = useDispatch();
  let active_sidenav = useSelector((state) => state.active_sidenav);
  let navs = [
    { title: "skills", icon: "ri-terminal-box-fill" },
    { title: "personal info", icon: "ri-user-4-fill" },
    { title: "files", icon: "ri-gamepad-fill" },
  ];
  return (
    <Resizable
      defaultSize={{ width: "52px" }}
      maxWidth={"52px"}
      minWidth={"52px"}
      enable={{
        top: false,
        topLeft: false,
        left: false,
        right: true,
        bottom: false,
        bottomLeft: false,
        bottomRight: false,
        topRight: false,
      }}
      className="h-full border-right flex py-3 items-center flex-col gap-3 text-md"
    >
      {/* <i class="ri-file-2-fill secondary-white opacity-75"></i> */}
      {navs.map((nav, i) => (
        <i
          key={i}
          className={`${nav.icon} secondary-white ${
            i === active_sidenav ? "opacity-80" : "opacity-40 animate-bounce"
          } cursor-pointer hover:opacity-80`}
          title={nav.title}
          onClick={(e) => dispatch(active_sidenav_actions.setActive(i))}
        ></i>
      ))}
    </Resizable>
    // <section className="w-12 bg-yellow-400 h-full overflow-hidden resize block">
    //   Hello
    // </section>
  );
}
</file>

<file path="src/views/AboutMe/Skills_Certificates_Viewer.jsx">
import React from "react";
import { useSelector } from "react-redux";
import AllSkills from "../../components/AllSkills";
import FakeScroller from "../../components/FakeScroller";
import MajorSkills from "../../components/MajorSkills";

export default function Skills_Certificates_Viewer() {
  let active_sidenav = useSelector((state) => state.active_sidenav);
  let selected_skills = useSelector((state) => state.selected_skills);
  let active_panel =
    active_sidenav === 0
      ? selected_skills === 0
        ? "major_skills"
        : "all_skills"
      : "certificates";
  return (
    <div className="h-full border-right text-sm secondary-1 flex-col flex-1 gap-0 overflow-hidden">
      <div className="w-full border-bottom h-[43.7px] flex">
        <button className="flex h-full justify-center px-3 items-center border-right hover:bg-transparent text-sm">
          <span>{active_panel}</span>
          <i className="ri-close-fill ml-14"></i>
        </button>
      </div>
      <div className="w-full h-full flex flex-1">
        <div className="h-full flex-1 p-8">
          {active_panel === "major_skills" && <MajorSkills />}
          {active_panel === "all_skills" && <AllSkills />}
        </div>
        <FakeScroller />
      </div>
    </div>
  );
}
</file>

<file path="src/views/ContactMe/Editor.jsx">
import { Resizable } from "re-resizable";
import React from "react";
import FakeScroller from "../../components/FakeScroller";
import Form from "./Form";
import FormCode from "./FormCode";

export default function Editor() {
  return (
    <Resizable
      className="h-full  flex-1 text-sm secondary-1 flex flex-col gap-0 overflow-hidden"
      enable={{
        top: false,
        topLeft: false,
        left: false,
        right: true,
        bottom: false,
        bottomLeft: false,
        bottomRight: false,
        topRight: false,
      }}
    >
      <div className="w-full border-bottom h-[47.7px] flex">
        <button className="flex h-full justify-center px-3 items-center border-right hover:bg-transparent hover:o">
          <span>contact_me</span>
          <i className="ri-close-fill ml-14"></i>
        </button>
      </div>
      <div className="w-full h-full flex justify-between">
        <Form />
        <FormCode />
        <FakeScroller />
      </div>
    </Resizable>
  );
}
</file>

<file path="src/views/ContactMe/Form.jsx">
import React, { useRef } from "react";
import { useSelector, useDispatch } from "react-redux";
import contactForm from "../../reducers/contactForm";

export default function Form() {
  let dispatch = useDispatch();
  let form = useSelector((state) => state.contactForm);
  const [formActive, setformActive] = React.useState(true);
  let submitBtn = useRef(null);

  let handleChange = (name, val) => {
    dispatch(contactForm.update({ ...form, [name]: val }));
  };

  let handleSubmit = (e) => {
    e.preventDefault();
    submitBtn.current.disabled = true;
    setTimeout(() => setformActive(false), 1000);
  };
  return (
    <div className="h-full w-5/12 flex justify-center items-center flex-col">
      {formActive ? (
        <form className="w-8/12" onSubmit={(e) => handleSubmit(e)}>
          <div className="flex flex-col gap-2.5 my-4 w-full">
            <label className=" w-fit" htmlFor="name">
              _name:
            </label>
            <input
              className="input-bg input-border rounded-md h-10 text-[#465E77] w-full "
              required
              type="text"
              id="name"
              onChange={(e) => handleChange("name", e.target.value)}
            />
          </div>
          <div className="flex flex-col gap-2.5 my-4 w-full">
            <label className=" w-fit" htmlFor="email">
              _email:
            </label>
            <input
              className="input-bg input-border rounded-md h-10 text-[#465E77] w-full "
              required
              type="email"
              id="email"
              onInput={(e) => handleChange("email", e.target.value)}
            />
          </div>
          <div className="flex flex-col gap-2.5 my-4 w-full">
            <label className=" w-fit" htmlFor="message">
              _message:
            </label>
            <textarea
              required
              className="input-bg pt-3 input-border pr-3 rounded-md w-full h-28 text-[#465E77] max-h-36 min-h-[80px]"
              name="message"
              id="message"
              onInput={(e) => handleChange("message", e.target.value)}
            ></textarea>
          </div>
          <div className="flex flex-col gap-2.5 my-4 w-full items-start">
            <button
              type="submit"
              className="btn-default font-medium px-[14px] py-[10px] rounded-lg text-xs mt-2"
              ref={submitBtn}
            >
              submit-message
            </button>
          </div>
        </form>
      ) : (
        <div className="text-center w-9/12">
          <h2 className="text-xl secondary-white font-normal">Thank you! 👌</h2>
          <p className="secondary-1 mt-2">
            Your message has been received. You will recieve your answer really
            soon!
          </p>
          <button
            className="btn-default font-medium px-[13px] py-[8px] rounded-lg text-xs mt-5"
            onClick={(e) => setformActive(true)}
          >
            send-new-message
          </button>
        </div>
      )}
      <div className=" h-20"></div>
    </div>
  );
}
</file>

<file path="src/views/ContactMe/FormCode.jsx">
import React from "react";
import { useSelector } from "react-redux";
import Brackets from "../../components/Brackets";
import ImportsColorizer from "../../components/ImportsColorizer";
import Keyword from "../../components/Keyword";
import Literal from "../../components/Literal";
import PropertiesColorizer from "../../components/PropertiesColorizer";
import StringColorizer from "../../components/StringColorizer";
import Symbol from "../../components/Symbol";
import moment from "moment";

export default function FormCode() {
  const [newContent, setnewContent] = React.useState();
  var content;
  const contentRef = React.useRef();
  let form = useSelector((state) => state.contactForm);

  content = (
    <p className="text-xs h-fit secondary-1" ref={contentRef}>
      <p>
        <Keyword keyword={"const"} />
        <Literal literal={" button"} />
        <Symbol symbol={" = "} />
        <ImportsColorizer imported={"document"} />
        <Symbol symbol={"."} />
        <PropertiesColorizer property={"querySelector"} />
        <Brackets brackets={"("} />
        <StringColorizer onequote string={"#sendBtn"} />
        <Brackets brackets={")"} />
        <Symbol symbol={";"} />
      </p>
      <br />
      <p>
        <Keyword keyword={"const "} />
        <Literal literal={" message"} />
        <Symbol symbol={" = "} />
        <Brackets brackets={"{"} second />
      </p>
      <div className="ml-7">
        <p>
          <PropertiesColorizer property={"name"} />
          <Symbol symbol={": "} />
          <StringColorizer string={form.name} />
          <Symbol symbol={","} />
        </p>
        <p>
          <PropertiesColorizer property={"email"} />
          <Symbol symbol={": "} />
          <StringColorizer string={form.email} />
          <Symbol symbol={","} />
        </p>
        <p>
          <PropertiesColorizer property={"message"} />
          <Symbol symbol={": "} />
          <StringColorizer string={form.message} />
          <Symbol symbol={","} />
        </p>
        <p>
          <PropertiesColorizer property={"date"} />
          <Symbol symbol={": "} />
          <StringColorizer string={moment(new Date()).format("ddd DD MMM")} />
          <Symbol symbol={","} />
        </p>
      </div>
      <p></p>
      <p>
        <Brackets brackets={"}"} second />
      </p>
      <br />
      <p>
        <Literal literal={"button"} />
        <Symbol symbol={"."} />
        <PropertiesColorizer property={"addEventListener"} />
        <Brackets brackets={"("} />
        <StringColorizer string={"click"} onequote />
        <Symbol symbol={", "} />
        <Brackets brackets={"("} second />
        <Brackets brackets={")"} second />
        <Symbol symbol={" => "} />
        <Brackets brackets={"{"} second />
      </p>
      <p className="pl-7">
        <Literal literal={"form"} />
        <Symbol symbol={"."} />
        <PropertiesColorizer property={"send"} />
        <Brackets brackets={"("} />
        <Literal literal={"message"} />
        <Brackets brackets={")"} />
        <Symbol symbol={";"} />
      </p>
      <p>
        <Brackets brackets={"}"} second />
        <Brackets brackets={")"} />
      </p>
      <span className=" invisible">--</span>
    </p>
  );
  React.useEffect(() => {
    let p_content = contentRef.current;
    let p_content_height = p_content.offsetHeight; // 12 for padding top
    let p_content_lineHeight = Number(
      getComputedStyle(p_content).lineHeight.substring(0, 2)
    );
    let lines = Math.ceil(p_content_height / p_content_lineHeight);
    setnewContent(
      <p className="w-4 text-xs h-full mr-7">
        {[...Array(lines).keys()].map((number, i) => (
          <span key={i}>{number + 1} </span>
        ))}
      </p>
    );
    return () => {};
  }, [contentRef]);
  return (
    <div className="h-full w-7/12 p-10 flex border-left">
      {newContent}
      {content}
    </div>
  );
}
</file>

<file path="src/views/ContactMe/index.jsx">
import React from "react";
import Editor from "./Editor";
import MainNav from "./MainNav";

export default function ContactMe() {
  return (
    <main className="flex w-full" style={{ height: "90%" }}>
      <MainNav />
      <Editor />
    </main>
  );
}
</file>

<file path="src/views/ContactMe/MainNav.jsx">
import { Resizable } from "re-resizable";
import React from "react";
import { useDispatch, useSelector } from "react-redux";
import { my_data } from "../../data";
import contacts_panel_actions from "../../reducers/contacts_panel";
import personalinfo_panel_actions from "../../reducers/personalinfo_panel";

export default function MainNav() {
  const contacts_panel_state = useSelector((state) => state.contacts_panel);
  const personalinfo_panel_state = useSelector(
    (state) => state.personalinfo_panel
  );
  const languages_panel_state = useSelector((state) => state.languages_panel);

  const dispatch = useDispatch();
  let contacts_panel_switch = (state) =>
    dispatch(contacts_panel_actions.open(!contacts_panel_state));
  let personalInfo_panel_switch = (state) =>
    dispatch(personalinfo_panel_actions.open(!personalinfo_panel_state));

  return (
    <Resizable
      className="h-full border-right text-xs"
      defaultSize={{ width: "259px" }}
      minWidth={"245px"}
      maxWidth={"320px"}
      enable={{
        top: false,
        topLeft: false,
        left: false,
        right: true,
        bottom: false,
        bottomLeft: false,
        bottomRight: false,
        topRight: false,
      }}
    >
      <button
        className={
          "w-full border-bottom text-left flex pl-3 h-11 items-center text-white " +
          (languages_panel_state ? "border-top" : "")
        }
        onClick={(e) => contacts_panel_switch(contacts_panel_state)}
      >
        <i
          className={
            (contacts_panel_state
              ? "ri-arrow-down-s-fill"
              : "ri-arrow-right-s-fill") + " text-base mr-2"
          }
        ></i>

        <span> contacts</span>
      </button>
      <div
        className={
          (contacts_panel_state ? "block h-auto" : "hidden h-0") +
          " flex flex-col pl-5 secondary-1 text-md py-3 gap-2"
        }
      >
        <p className="flex items-center gap-2">
          <i className="ri-mail-fill text-md"></i> noelmugisha332@gmail.com
        </p>
        <p className="flex items-center gap-2">
          <i className="ri-phone-fill text-md"></i> +250793136798
        </p>
      </div>
      <button
        className={
          "w-full border-bottom text-left flex pl-3 h-11 items-center text-white "
        }
        onClick={(e) => personalInfo_panel_switch(personalinfo_panel_state)}
      >
        <i
          className={
            (personalinfo_panel_state
              ? "ri-arrow-down-s-fill"
              : "ri-arrow-right-s-fill") + " text-base mr-2"
          }
        ></i>

        <span>find-me-also-on</span>
      </button>
      <div
        className={
          (personalinfo_panel_state ? "block h-auto" : "hidden h-0") +
          " flex flex-col pl-5 secondary-1 text-md py-3 gap-2"
        }
      >
        {Object.keys(my_data.links).map((keyname, i) => (
          <p className="" key={i}>
            <a
              href={my_data.links[keyname]}
              className="flex items-center gap-2"
            >
              <i className={`ri-${keyname}-fill text-md`}></i> {keyname}
            </a>
          </p>
        ))}
      </div>
    </Resizable>
  );
}
</file>

<file path="src/views/Home.jsx">
import React from "react";
import { useSelector } from "react-redux";
import Footer from "../components/Footer";
import Navbar from "../components/Navbar";
import Welcome from "./Welcome";
import "remixicon/fonts/remixicon.css";
import AboutMe from "./AboutMe";
import ContactMe from "./ContactMe";
import Projects from "./Projects";

const subViews = [<Welcome />, <AboutMe />, <Projects />, "", <ContactMe />];

export default function Home() {
  const active = useSelector((store) => store.navigation);
  return (
    <>
      <div className="lg:h-screen lg:flex flex-col gap-0 hidden">
        <Navbar />
        {subViews[active]}
        <Footer />
      </div>
      <div className="h-screen lg:hidden flex flex-col gap-20 items-center justify-center w-9/12 m-auto">
        <p className="text-lg font-semibold secondary-4 ">Hello there 👋</p>
        <img
          src="/assets/images/smallScreenMaintenance.png"
          alt="small screen"
          className="md:w-8/12"
        />
        <p className="text-base accent-5 font-semibold text-center">
          Portfolio under <span className="accent-2">Maintenance</span>.
          ...
        </p>
      </div>
    </>
  );
}
</file>

<file path="src/views/Projects/Editor.jsx">
import { Resizable } from "re-resizable";
import React from "react";
import FakeScroller from "../../components/FakeScroller";
import { useSelector } from "react-redux";
import { my_data } from "../../data";
import ProjectCard from "../../components/ProjectCard";

export default function Editor() {
  const projectsTech = useSelector((state) => state.projectsTech);
  let filteredProjects = [];
  let remainingProjects = my_data.projects;
  for (var projectTech of projectsTech) {
    filteredProjects = [
      ...filteredProjects,
      ...remainingProjects.filter((project) =>
        project.tech.includes(projectTech)
      ),
    ];
    remainingProjects = [
      ...remainingProjects.filter(
        (project) => !project.tech.includes(projectTech)
      ),
    ];
  }

  return (
    <Resizable
      className="h-full flex-1 text-sm secondary-1 flex-col gap-0 overflow-hidden"
      enable={{
        top: false,
        topLeft: false,
        left: false,
        right: true,
        bottom: false,
        bottomLeft: false,
        bottomRight: false,
        topRight: false,
      }}
    >
      <div className="w-full border-bottom h-[43.7px] flex">
        <button className="flex h-full justify-center px-3 items-center border-right hover:bg-transparent hover:o">
          <span>{projectsTech.length > 0 ? projectsTech.join("_") : "_"}</span>
          <i className="ri-close-fill ml-10"></i>
        </button>
      </div>
      <div className="w-full h-full flex justify-between">
        <div className="h-full overflow-hidden p-4 flex-1">
          <div className="flex items-center flex-1 w-10/12 m-auto gap-6 flex-wrap mt-7">
            {filteredProjects &&
              filteredProjects.map((project, i) => (
                <ProjectCard project={project} key={i} index={i} />
              ))}
          </div>
        </div>
        <FakeScroller />
      </div>
    </Resizable>
  );
}
</file>

<file path="src/views/Projects/index.jsx">
import React from "react";
import Editor from "./Editor";
import MainNav from "./MainNav";
export default function () {
  return (
    <main className="flex w-full" style={{ height: "90%" }}>
      <MainNav />
      <Editor />
    </main>
  );
}
</file>

<file path="src/views/Projects/MainNav.jsx">
import { Resizable } from "re-resizable";
import React from "react";
import { useDispatch, useSelector } from "react-redux";
import { my_data } from "../../data";
import projectsTechActions from "../../reducers/projectsTech";

export default function MainNav() {
  const projectsTech = useSelector((state) => state.projectsTech);
  let dispatch = useDispatch();
  const [isPanelOpen, setisPanelOpen] = React.useState(true);

  let isTechChecked = (tech) => {
    return (
      <i
        className={`ri-checkbox-${
          projectsTech.includes(tech) ? "fill" : "blank-line"
        }`}
      ></i>
    );
  };
  let filterTech = (tech) => {
    dispatch(projectsTechActions.update(tech));
  };
  return (
    <Resizable
      className="h-full border-right text-xs"
      defaultSize={{ width: "259px" }}
      minWidth={"245px"}
      maxWidth={"280px"}
      enable={{
        top: false,
        topLeft: false,
        left: false,
        right: true,
        bottom: false,
        bottomLeft: false,
        bottomRight: false,
        topRight: false,
      }}
    >
      <button
        className={
          "focus:outline-none w-full border-bottom text-left flex pl-3 h-11 items-center text-white "
        }
        onClick={(e) => setisPanelOpen(!isPanelOpen)}
      >
        <i
          className={
            (isPanelOpen ? "ri-arrow-down-s-fill" : "ri-arrow-right-s-fill") +
            " text-base mr-2"
          }
        ></i>

        <span> projects</span>
      </button>
      <div
        className={
          (isPanelOpen ? "block h-auto" : "hidden h-0") +
          " flex flex-col pl-3 secondary-1 py-3 gap-2 text-[15px]"
        }
      >
        {my_data.techs &&
          my_data.techs.map((tech, i) => (
            <button
              className="flex items-center gap-2 focus:outline-none"
              key={i}
              onClick={(e) => filterTech(tech.tech)}
            >
              {isTechChecked(tech.tech)}
              <i className={`${tech.icon} ml-4`}></i>
              {tech.tech}
            </button>
          ))}
      </div>
    </Resizable>
  );
}
</file>

<file path="src/views/Welcome.jsx">
import React from "react";
import bgBlurs from "../assets/bg-blurs.png";
import MacImgWindow from "../components/MacWindow";
import { my_data } from "../data";
import "../styles/welcome.scss";
import { motion } from "framer-motion";

export default function Welcome() {
  return (
    <motion.div
      initial={{ scale: 0.8, opacity: 0 }}
      animate={{ scale: 1, opacity: 1 }}
      layout
      transition={{ duration: 0.5 }}
      className="flex-1 flex justify-center items-center overflow-hidden m-auto w-8/12"
    >
      <div className="w-5/12 secondary-white">
        <p className=" text-xs">Hellooo 👋. I'm</p>
        <h4 className=" text-5xl mt-3">{my_data.firstName}</h4>
        <p className=" text-lg mt-2 secondary-3">{my_data.proffession}</p>
        <p className=" text-xs mt-14 secondary-1">// welcome to my portfolio</p>
        <p className=" text-xs mt-1 secondary-1">
          // you can also visit my Github account
        </p>
        <p className="text-xs mt-1">
          <span className="secondary-3">const </span>
          <span className="secondary-2">githubLink </span>
          <span className="secondary-white">= </span>
          <a href={my_data.links.github} target="_blank" className="accent-3">
            "{my_data.links.github}"
          </a>
          <span className="secondary-white">;</span>
        </p>
      </div>
{/*       <div className="w-6/12 relative">
        <MacImgWindow
          img={my_data.img}
          img_name={my_data.firstName}
          styles="w-8/12 left-9 top-14 absolute z-10"
        />
        <img
          src={bgBlurs}
          alt="blurs"
          className="w-full blurs scale-y-150 scale-x-110"
        />
      </div> */}
    </motion.div>
  );
}
</file>

<file path="tailwind.config.js">
module.exports = {
  mode: "jit",
  content: ["./index.html", "./src/**/*.{vue,js,ts,jsx,tsx}"],
  theme: {
    extend: {},
  },
  plugins: [],
};
</file>

<file path="vercel.json">
{
  "rewrites": [
    {
      "source": "/(.*)",
      "destination": "/index.html"
    }
  ]
}
</file>

<file path="vite.config.js">
import { defineConfig } from 'vite'
import react from '@vitejs/plugin-react'

export default defineConfig({
  plugins: [react()],
  server: {
    port: 5173,
    host: true
  }
})
</file>

</files>
